#!/bin/sh

set -e

# summary of how this script can be called:
#
#   * <postrm> `remove'
#   * <postrm> `purge'
#   * <old-postrm> `upgrade' <new-version>
#   * <disappearer's-postrm> `disappear' <overwriter> <overwriter-version>
#   * <new-postrm> `failed-upgrade' <old-version> <new-version>
#   * <new-postrm> `abort-install'
#   * <new-postrm> `abort-install' <old-version> <new-version>
#   * <new-postrm> `abort-upgrade' <old-version> <new-version>
#
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#ABORT_CONFFILE_TRANSFER#

NWFILTERS="
    allow-arp
    allow-dhcp
    allow-dhcp-server
    allow-incoming-ipv4
    allow-ipv4
    clean-traffic
    clean-traffic-gateway
    no-arp-ip-spoofing
    no-arp-mac-spoofing
    no-arp-spoofing
    no-ip-multicast
    no-ip-spoofing
    no-mac-broadcast
    no-mac-spoofing
    no-other-l2-traffic
    no-other-rarp-traffic
    qemu-announce-self
    qemu-announce-self-rarp
"

case "$1" in
    purge)
        if getent group libvirt >/dev/null; then
            delgroup libvirt >/dev/null || true
        fi

        if getent passwd libvirt-qemu >/dev/null; then
            deluser libvirt-qemu >/dev/null || true
        fi

        if getent group libvirt-qemu >/dev/null; then
            delgroup libvirt-qemu >/dev/null || true
        fi

        # Clean up logs and cached capabilities
        rm -rf /var/log/libvirt \
               /var/cache/libvirt/qemu/capabilities

        # Clean up obsolete runtime data
        rm -rf /var/lib/libvirt/qemu/channel/target/domain-*
        if [ -d /var/lib/libvirt/qemu/channel/target ]; then
            rmdir --ignore-fail-on-non-empty /var/lib/libvirt/qemu/channel/target
        fi
        if [ -d /var/lib/libvirt/qemu/channel ]; then
            rmdir --ignore-fail-on-non-empty /var/lib/libvirt/qemu/channel
        fi

        # Clean up created dirs if existent and empty, they contain precious
        # data otherwise
        for dir in /var/lib/libvirt/qemu/save \
                   /var/lib/libvirt/qemu/snapshot \
                   /var/lib/libvirt/qemu/dump \
                   /var/lib/libvirt/qemu/nvram \
                   /var/lib/libvirt/qemu/ram/libvirt/qemu \
                   /var/lib/libvirt/qemu/ram/libvirt \
                   /var/lib/libvirt/qemu/ram \
                   /var/lib/libvirt/qemu \
                   /var/cache/libvirt/qemu; do
            [ ! -d $dir ] || rmdir --ignore-fail-on-non-empty $dir
        done
    ;;

    abort-install|abort-upgrade)
        abort_conffile_transfer \
            "/etc/libvirt/qemu/networks/default.xml" \
            "6.0.0-0~" \
            "6.9.0-2~" \
            "libvirt-daemon-system" \
            "libvirt-daemon-config-network" \
            -- \
            "$@"
        for nwfilter in $NWFILTERS; do
            abort_conffile_transfer \
                "/etc/libvirt/nwfilter/$nwfilter.xml" \
                "6.0.0-0~" \
                "6.9.0-2~" \
                "libvirt-daemon-system" \
                "libvirt-daemon-config-nwfilter" \
                -- \
                "$@"
        done

        # dh_apparmor can't work with dir/file profile filenames yet (#979500)
        ABSTRACTIONS_DIR="/etc/apparmor.d/abstractions"
        LOCAL_ABSTRACTIONS_DIR="/etc/apparmor.d/local/abstractions"
        LIBVIRT_ABSTRACTIONS="libvirt-lxc libvirt-qemu"
        for name in $LIBVIRT_ABSTRACTIONS; do
            abstraction="$ABSTRACTIONS_DIR/$name"
            local_abstraction="$LOCAL_ABSTRACTIONS_DIR/$name"

            if [ ! -e "$abstraction" ] ; then
                rm -f "$local_abstraction"
                rmdir --ignore-fail-on-non-empty "$LOCAL_ABSTRACTIONS_DIR" 2>/dev/null
            fi
        done
    ;;

    remove|upgrade|disappear|failed-upgrade)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
