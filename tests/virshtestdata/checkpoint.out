Create a series of checkpoints, with names that intentionally sort
differently by topology than by name. For now, it is not possible
to create fanout without hacking through redefines.
Domain checkpoint c1 created
error: operation failed: domain moment c1 already exists

Domain checkpoint c3 created
Domain checkpoint c2 created
snapshots cannot be created while checkpoints exist
error: Operation not supported: cannot create snapshot while checkpoint exists

Checking tree view (siblings sorted alphabetically)
c1
  |
  +- c3
      |
      +- c2
        

Demonstrate list filtering
c1

c2

c1
c3	c1

c2

c2
c3

Now the tree is linear, so we have an unambiguous topological order
c1
c2
c3

c1
c3
c2

validate XML
Domain checkpoint c1 deleted

<domaincheckpoint>
  <name>c3</name>
  
  <disks>
    <disk name='vda' checkpoint='bitmap' bitmap='c3'/>
  </disks>
  <domain type='test'>
    <name>test</name>
    <uuid>6695eb01-f6a4-8304-79aa-97f2502e193f</uuid>
    <memory unit='KiB'>8388608</memory>
    <currentMemory unit='KiB'>2097152</currentMemory>
    <vcpu placement='static'>2</vcpu>
    <os>
      <type arch='i686'>hvm</type>
      <boot dev='hd'/>
    </os>
    <clock offset='utc'/>
    <on_poweroff>destroy</on_poweroff>
    <on_reboot>restart</on_reboot>
    <on_crash>destroy</on_crash>
    <devices>
      <disk type='file' device='disk'>
        <source file='/guest/diskimage1'/>
        <target dev='vda' bus='virtio'/>
        <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
      </disk>
      <interface type='network'>
        <mac address='aa:bb:cc:dd:ee:ff'/>
        <source network='default'/>
        <target dev='testnet0'/>
        <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0'/>
      </interface>
      <memballoon model='virtio'>
        <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>
      </memballoon>
    </devices>
  </domain>
</domaincheckpoint>

<domaincheckpoint>
  <name>c2</name>
  <parent>
    <name>c3</name>
  </parent>
  
  <disks>
    <disk name='vda' checkpoint='bitmap' bitmap='c2'/>
  </disks>
  <domain type='test'>
    <name>test</name>
    <uuid>6695eb01-f6a4-8304-79aa-97f2502e193f</uuid>
    <memory unit='KiB'>8388608</memory>
    <currentMemory unit='KiB'>2097152</currentMemory>
    <vcpu placement='static'>2</vcpu>
    <os>
      <type arch='i686'>hvm</type>
      <boot dev='hd'/>
    </os>
    <clock offset='utc'/>
    <on_poweroff>destroy</on_poweroff>
    <on_reboot>restart</on_reboot>
    <on_crash>destroy</on_crash>
    <devices>
      <disk type='file' device='disk'>
        <source file='/guest/diskimage1'/>
        <target dev='vda' bus='virtio'/>
        <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
      </disk>
      <interface type='network'>
        <mac address='aa:bb:cc:dd:ee:ff'/>
        <source network='default'/>
        <target dev='testnet0'/>
        <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0'/>
      </interface>
      <memballoon model='virtio'>
        <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>
      </memballoon>
    </devices>
  </domain>
</domaincheckpoint>

Deleting current checkpoint moves current up to remaining parent
Domain checkpoint c3 children deleted

c3

Domain checkpoint c3 deleted


